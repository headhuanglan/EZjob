#############
[SSH]
hostname =
#some ssh has gateway,  localhost->jump_host->targethost, if this is the case, set your gateway as jump_hostname
jump_hostname =
port = 22
#maxium timeout for connection in sec
timeout = 30
username =
# password is optional, if you do not type it here, then you will need to type it when you connect to remote server.
password =
#if no password is specified, and private_key_file present, you will login by private key
private_key_file =
#dynamic password  yes/no
dynamic_password =
#multi factor auth yes/no
multi_factor_auth =
#multi factor auth key is the step for example
# | Duo two-factor login for username
# |
# | Enter a passcode or select one of the following options:
# |
# |  1. Duo Push to XXX-XXX-4177
# |  2. Phone call to XXX-XXX-4177
# |  3. SMS passcodes to XXX-XXX-4177
# |
# | Passcode or option (1-3):
# you want to give a key words that can capture this step, for this example, the multi_factor_auth_key can be set as 'Duo'
# Since 'Due' is the key words appear in the first line
multi_factor_auth_key =
# you option to the questions, for example: Due Push, multi_factor_auth_option = 1
multi_factor_auth_option =

[CONST]
#should be absolute full path on remote server
#local folder will mirror to REMOTE_WORKING_DIR
REMOTE_WORKING_DIR =
#REMOTE_SCRATCH_DIR is optional, it is recommended to have this value. It is the parent folder where the simulation jobs are submitted. Only result files are copied back to REMOTE_WORKING_DIR
#If REMOTE_SCRATCH_DIR is not defined, REMOTE_WORKING_DIR will be used as scratch folder. User can overwrite REMOTE_SCRATCH_DIR when calling JobManager.submit(scratch='/user_customized/path')
REMOTE_SCRATCH_DIR =

[LOG]
#log file name to save job submission history
log_file = log.pickle

[JOB]
#remote server commands for checking job status
cmd_job_status =
#remote server commands for submit a job
cmd_job_submit = sbatch
#remote server command for kill a job
cmd_job_cancel = scancel

#after run cmd_job_status on remote server, how many lines need to skip to read job status data
job_status_header_skip = 1
#col number of jobid in job status data, statring from 1, 2, 3...
job_status_jobid_col =
#status col number
job_status_st_col =
#job pending label in  job status data
job_status_pending_label =
#job running label in  job status data
job_status_running_label =
#job running time col number
job_status_time_col =



